<h2 class="all-restaurant-page-title">PLENTY is happy to have so many partnerships!</h2>
<h6 class="all-restaurant-page-subtitle">Listed below are all the restaurants associated with PLENTY. Each restaurant has either helped customers save money, fed those in need, and/or contributed to saving our planet by minimizing food wastage.</h6>

<p class="mobile-rules">Pinch or double tap to zoom</p>
<p class="mobile-rules">Hold and slide to move around map</p>
<p class="mobile-rules">Tap on icon for more information</p>

<div class="live-restaurants-container">

  <div id="map"></div>

  <div class="live-discount-restaurants-col">
    <h1 class="restaurants-list-heading">All Restaurants</h1>
    <% @restaurants.each do |restaurant| %>
      <div class="all-restaurants-list">
        <h3 class="restaurant-name-in-list"><%= restaurant.cname %></h3>
        <h5 class="restaurant-address-in-list"><%= restaurant.address %></h5>
      </div>
    <% end %>
  </div>

</div>



<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDzDUyA7JETU9aaofrnQdoTqXCLEBrSywA&libraries=places" type="text/javascript">
</script>
<script type="text/javascript">

var infoWindow, map;
function initMap() {
	map = new google.maps.Map(document.getElementById('map'), {
	  center: {lat: 40.714623, lng: -74.006605},
	  zoom: 14,
	  styles: [
	  	{
	  		featureType: "poi",
	  		elementType: "labels",
	 		stylers: [
	  			{visibility: "off"}
	  		]
		}
	]
	});
  var infoWindow = new google.maps.InfoWindow

  var restaurants = [
    <% @restaurants.each do |restaurant| %>
      {
        coords:{lat:<%= restaurant.latitude %>,lng:<%= restaurant.longitude %>},
        content: "<h3><%= restaurant.cname %></h3> <h6><%= restaurant.address %></h6>"
      },
    <% end %>
  ]
  
  for(var i = 0; i < restaurants.length; i++){
    addMarker(restaurants[i]);
  }
  function addMarker(props){
    var marker = new google.maps.Marker({
    position: props.coords,
    map: map

    });
    var infoWindow = new google.maps.InfoWindow({
      content: props.content 
    });
    marker.addListener('click', function(){
      infoWindow.open(map, marker);
    });  
  }
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {
          var pos = {
            lat: position.coords.latitude,
            lng: position.coords.longitude
          };
          infoWindow.setPosition(pos);
          infoWindow.setContent('Current Location');
          infoWindow.open(map);
          map.setCenter(pos);
        }, function() {
          handleLocationError(true, infoWindow, map.getCenter());
        });
      } else {
        // Browser doesn't support Geolocation
        handleLocationError(false, infoWindow, map.getCenter());
      }
};

$(function () {
        initialize();
    });

var placeSearch, autocomplete;
var componentForm = {
	street_number: 'short_name',
	route: 'long_name',
	locality: 'long_name',
	administrative_area_level_1: 'short_name',
	country: 'long_name',
	postal_code: 'short_name'
};

function initialize() {
    autocomplete = new google.maps.places.Autocomplete(
        (document.getElementById('autocomplete')),
        {types: ['geocode']});
    autocomplete.addListener('place_changed', fillInAddress);
    console.log(autocomplete);
    console.log();
}

function fillInAddress() {
    var place = autocomplete.getPlace();

    for (var component in componentForm) {
      document.getElementById(component).value = '';
      document.getElementById(component).disabled = false;
    }

    for (var i = 0; i < place.address_components.length; i++) {
      var addressType = place.address_components[i].types[0];
      if (componentForm[addressType]) {
        var val = place.address_components[i][componentForm[addressType]];
        document.getElementById(addressType).value = val;
      }
    }
  }



      function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
                              'Error: The Geolocation service failed.' :
                              'Error: Your browser doesn\'t support geolocation.');
        infoWindow.open(map);
      }

setTimeout(initMap, 10);
</script>


